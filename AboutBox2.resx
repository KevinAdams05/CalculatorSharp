<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>Based on Calculator#, by Greg McLeod

Authors:
Kevin Adams
Greg McLeod (original author)

Change Log:
1.3.0 
- Forked from Calculator#
- Updated to Framework 4.6.2
- Misc. format and style changes

Icon by dtafalonso
License: CC Attribution-No Derivative 4.0
https://creativecommons.org/licenses/by-nd/4.0/</value>
  </data>
</root>